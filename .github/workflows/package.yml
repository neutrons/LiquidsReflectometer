name: Conda packaging and deployment

on:
  workflow_dispatch:
  push:
    branches: [qa, main]
    tags: ['v*']

jobs:

  conda-build:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate versioning
          fetch-tags: true  # Fetch tags to ensure versioning works correctly

      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.10
        with:
          manifest-path: pyproject.toml

      - name: build conda package
        run: |
          pixi run conda-build
          test -f lr_reduction-*.conda

      - name: upload conda package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact-conda-package
          path: lr_reduction-*.conda

  conda-verify:
    needs: conda-build
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: test
          init-shell: bash
          create-args: >-
            python=3.10

      - name: Download conda package artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-conda-package
          path: /tmp/local-channel/linux-64

      - name: Install the package
        run: |
          micromamba install --yes -c conda-forge conda-build
          python -m conda_index /tmp/local-channel
          micromamba install --yes -c /tmp/local-channel -c mantid-ornl -c conda-forge lr_reduction

      - name: Verify the installation
        run: |
          python -c "import lr_reduction"
          python -c "import mantid"
          python -c "import lmfit"

  conda-upload:
    needs: conda-verify
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 100  # Fetch all history for accurate versioning
          fetch-tags: true  # Fetch tags to ensure versioning works correctly

      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.10
        with:
          manifest-path: pyproject.toml

      - name: Download conda package artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact-conda-package
          path: /tmp/local-channel/linux-64

      - name: upload conda package to anaconda
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
          IS_RC: ${{ contains(github.ref, 'rc') }}
        run: |
          # label is main or rc depending on the tag-name
          CONDA_LABEL="main"
          if [ "${IS_RC}" = "true" ]; then CONDA_LABEL="rc"; fi
          echo pushing ${{ github.ref }} with label $CONDA_LABEL
          pixi run anaconda upload --label $CONDA_LABEL --user neutrons lr_reduction-*.conda
